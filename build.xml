<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="."
         default="sra"
         name="SIMRacingApps-SIMPlugin-AC"
         xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="plugin.name" value="AC" />
    <tstamp>
        <format property="build.time" pattern="yyyy.MM.dd.HH.mm.ss" />
    </tstamp>
    <tstamp>
        <format property="build.date" pattern="yyyy.MM.dd" />
    </tstamp>
    <tstamp>
        <format property="build.year" pattern="yyyy" />
    </tstamp>
    <property name="version.properties" value="src/com/SIMRacingApps/SIMPlugins/${plugin.name}/version.properties" />
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../PortableApps/EclipsePortable/App/Eclipse/"/>
    <property name="SIMRacingAppsServer.location" value="../SIMRacingAppsServer"/>
    <property name="plugin.dir" value="${user.home}/Documents/SIMRacingApps" />
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Web App Libraries.libraryclasspath">
        <pathelement location="${SIMRacingAppsServer.location}/WebContent/WEB-INF/lib/snakeyaml-1.13.jar"/>
        <pathelement location="${SIMRacingAppsServer.location}/WebContent/WEB-INF/lib/genson-1.3.jar"/>
        <pathelement location="${SIMRacingAppsServer.location}/WebContent/WEB-INF/lib/jna-platform-4.5.1.jar" />
        <pathelement location="${SIMRacingAppsServer.location}/WebContent/WEB-INF/lib/jna-4.5.1.jar" />
    </path>
    <path id="SIMRacingAppsServer.classpath">
        <pathelement location="${SIMRacingAppsServer.location}/WebContent/WEB-INF/classes"/>
        <path refid="Web App Libraries.libraryclasspath"/>
    </path>
    <path id="SIMRacingAppsSIMPlugin.classpath">
        <pathelement location="classes"/>
        <fileset dir="lib">
            <include name="**/*.jar"/>
        </fileset>
        <path refid="SIMRacingAppsServer.classpath"/>
    </path>
    <target name="init" depends="init-ivy">
        <mkdir dir="classes"/>
        <copy includeemptydirs="false" todir="classes">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="classes"/>
        <delete dir="lib"/>
    </target>
    <target depends="init, resolve" name="build">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="SIMRacingAppsSIMPlugin.classpath"/>
        </javac>
    </target>
    <target name="version">
        <sequential>
            <propertyfile file="${version.properties}">
                <entry key="major" type="int" value="1" />
                <entry key="minor" type="int" value="0" />
                <entry key="build" type="string" value="BETA-${build.date}" />
                <entry key="built-by" type="string" value="Jeffrey Gilliam" />
                <entry key="copyright" type="string" value="Copyright (C) ${build.year} Jeffrey Gilliam" />
                <entry key="license" type="string" value="Apache License, Version 2.0, January 2004" />
            </propertyfile>
            <replaceregexp match="^#.*$" replace="#Sat, 01 Jan 2000 00:00:00 -0000" byline="true">
                <fileset dir="." includes="${version.properties}" />
            </replaceregexp>
            <property file="${version.properties}" prefix="version" />
            <property name="version" value="${version.major}.${version.minor}_Build_${version.build}" />
            <echo message="${version.properties} Remember to Tag Git with Version: ${version}" />
        </sequential>
    </target>
    <target name="sra" depends="build">
        <property file="${version.properties}" prefix="version" />
        <property name="version" value="${version.major}.${version.minor}_Build_${version.build}" />
        <zip destfile="${java.io.tmpdir}/SIMRacingAppsPlugin-${plugin.name}.sra">
            <fileset dir="classes"/>
            <fileset dir="lib"/>
        </zip>
    </target>
    <target name="installAsPlugin" depends="build">
        <property file="${version.properties}" prefix="version" />
        <property name="version" value="${version.major}.${version.minor}_Build_${version.build}" />
        <copydir dest="${plugin.dir}" src="classes" />
        <copydir dest="${plugin.dir}" src="lib" />
    </target>


    <!-- ivy setup -->
    <property name="ivy.install.version" value="2.4.0"/>
    <condition property="ivy.home" value="${env.IVY_HOME}">
        <isset property="env.IVY_HOME"/>
    </condition>
    <property name="ivy.home" value="${user.home}/.ant"/>
    <property name="ivy.jar.dir" value="${ivy.home}/lib"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>

    <target name="download-ivy" unless="offline">

        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load Ivy here from Ivy home, in case the user has not already dropped
                it into Ant's lib dir (note that the latter copy will always take precedence).
                We will not fail as long as local lib dir exists (it may be empty) and
                Ivy is in at least one of Ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <!-- ivy resolve -->
    <target name="resolve" description="--> retrieve dependencies with Ivy">
        <ivy:retrieve/>
    </target>
</project>
